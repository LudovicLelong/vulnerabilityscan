package main

import (
	"fmt"
	"time"
	"vulnerabilityscan/zap"
)

func main() {
	zapClient := zap.NewZAPv2()

	fmt.Printf("Spider target %s\n", zap.Target)

	// Utiliser le Traditional Spider Scan
	scanID, err := zapClient.SpiderScan()
	if err != nil {
		fmt.Println("Erreur lors du démarrage du Traditional Spider:", err)
		return
	}
	fmt.Printf("Scan ID: %s\n", scanID)

	timeout := time.Now().Add(2 * time.Minute)
	for {
		status, err := zapClient.SpiderStatus(scanID)
		if err != nil {
			fmt.Println("Erreur lors de la vérification du statut du Spider:", err)
			return
		}
		if status == "100" { // Vérifiez si le Spider est à 100%
			fmt.Println("Spider a terminé à 100%")
			break
		}
		if time.Now().After(timeout) {
			fmt.Println("Timeout atteint")
			break
		}
		fmt.Printf("Spider status: %s%%\n", status) // Affiche le pourcentage de progression
		time.Sleep(2 * time.Second)
	}

	fmt.Println("Spider completed")
	results, err := zapClient.SpiderResults(0, 100)
	if err != nil {
		fmt.Println("Erreur lors de l'obtention des résultats du Spider:", err)
		return
	}

	fmt.Printf("Nombre de résultats du Spider: %d\n", len(results))
	fmt.Println("Spider results:", results)
}
